Plaintext/unencrypted password - password storred in cear form. You can read it from file. Don't use applications that do this.
The correct form of storing a password is as a hash. 
Hashes represents data as a fixed-length string of plaintext. Hashes are uniq.
Hashes are one-way. You cant get original password only form the hash value.


Spraying attack - it tryes few most commons passwords. If they don't work, attacker moves to next account.

Brute force - try every possible combination until hash is matched. It's time consuming and very "loud". Admins can spot it and block. 
Also most applications have a brute force protection.
If na attacker obtains a list of users and hashes he can perform offline version. This is one is very effective and the only limit is attacker's hardware.


Dictionary attack - using a dictionary to find common words. This i sused for passwords created by humans. There are password lists on the internet that are specific to a type of job.
If  victim is a doctor, attacer will use medical dictionary first as it's high probability that victim's password is related to his job.


Rainbow tables - an optimized, pre-build set of hashes. It increase speed of cracking. 

Salt - some random data added to the password before it is hashed. Every user has it's own salt. This can slow process but it wil

Good practice is to use password manager and create uniq and complicated password for each website you log in.

